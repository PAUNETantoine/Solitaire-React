{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandr\\\\OneDrive\\\\Bureau\\\\Solitaire React\\\\Solitaire\\\\solitaire\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { Plateau } from \"./composants/Plateau\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/style.css\";\nimport handleRechargerPage from \"./scripts/rechargerPage\";\nimport handleDeplacerCarte from \"./scripts/deplacerCarte\";\n\n/*Ce composant contient tous les autre composants dans app et permet de dispatcher correcter les différents éléments*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PilesVictoire() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"PilesDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"Piles\",\n      className: \"Piles\",\n      width: \"510\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = PilesVictoire;\nfunction Colonnes({\n  handleClicDroit\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"ColonnesDiv\",\n    onContextMenu: handleClicDroit,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"Piles\",\n      id: \"Colonnes\",\n      width: \"900\",\n      height: \"600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Colonnes;\nfunction Pioche({\n  handleClicDroit\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"PiocheDiv\",\n    onContextMenu: handleClicDroit,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"Piles\",\n      id: \"Pioche\",\n      width: \"250\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c3 = Pioche;\nfunction App() {\n  _s();\n  //Les états\n  const [plateau, setPlateau] = useState(null);\n  const [jeuLance, setJeuLance] = useState(false);\n\n  //Les comportements\n  useEffect(() => {\n    const nouveauPlateau = new Plateau();\n    setPlateau(nouveauPlateau);\n  }, []);\n\n  //Gestion des clics\n  useEffect(() => {\n    if (!plateau) return;\n    const pilesCanvas = document.getElementById(\"Piles\");\n    const colonnesCanvas = document.getElementById(\"Colonnes\");\n    const piocheCanvas = document.getElementById(\"Pioche\");\n    const handlePilesClick = event => {\n      const rect = pilesCanvas.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      if (plateau.getCarteColonneSelectionne() !== null) {\n        handleDeplacerCarte(plateau.getCarteColonneSelectionne(), null, \"FIN-COLONNE\", plateau, jeuLance);\n        return;\n      }\n      if (plateau.getCartePiocheEstSelectionne() && plateau.getCartePiocheSelectionne() !== null) {\n        handleDeplacerCarte(plateau.getCartePiocheSelectionne(), null, \"FIN-PIOCHE\", plateau, jeuLance);\n        return;\n      }\n      if (plateau.getCarteFinSelectionne() === plateau.tabFin[Math.floor(x / 130)][0]) {\n        plateau.setCarteFinSelectionne(null);\n        handleRechargerPage(plateau, jeuLance);\n        return;\n      }\n      plateau.setCarteFinSelectionne(plateau.tabFin[Math.floor(x / 130)][0]);\n      plateau.setCarteColonneSelectionne(null);\n      plateau.setCartePiocheEstSelectionne(false);\n      plateau.setCartePiocheSelectionne(null);\n      handleRechargerPage(plateau, jeuLance);\n    };\n    const handleColonnesClick = event => {\n      const rect = colonnesCanvas.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      let indexX = Math.floor(x / 130);\n      let indexY = Math.floor(y / 30);\n\n      //Permet le calcul de la postion du clic selon la carte ( si une carte sous le paquet est cliquée )\n      if (plateau.tabColonnes[indexX].length < indexY) {\n        indexY = 0;\n      } else {\n        indexY = plateau.tabColonnes[indexX].length - 1 - indexY;\n        if (indexY < 0) {\n          indexY = 0;\n        }\n      }\n\n      //Si c'est  de la pioche vers les colonnes\n      if (plateau.getCartePiocheSelectionne() !== null && plateau.getCarteColonneSelectionne() === null && plateau.getCartePiocheEstSelectionne() === true) {\n        const carteDep = plateau.getCartePiocheSelectionne();\n        if (plateau.tabColonnes[indexX][indexY] === undefined) {\n          handleDeplacerCarte(carteDep, indexX, \"PIOCHE\", plateau, jeuLance);\n          return;\n        }\n        const carteArr = plateau.tabColonnes[indexX][indexY];\n        handleDeplacerCarte(carteDep, carteArr, \"PIOCHE\", plateau, jeuLance);\n        return;\n      }\n\n      //Si c'est de la fin vers les colonnes\n      if (plateau.getCarteFinSelectionne() !== null && plateau.getCarteColonneSelectionne() === null) {\n        const carteDep = plateau.getCarteFinSelectionne();\n        if (plateau.tabColonnes[indexX][indexY] === undefined) {\n          handleDeplacerCarte(carteDep, indexX, \"FINversCOLONNES\", plateau, jeuLance);\n          return;\n        }\n        const carteArr = plateau.tabColonnes[indexX][indexY];\n        handleDeplacerCarte(carteDep, carteArr, \"FINversCOLONNES\", plateau, jeuLance);\n        return;\n      }\n\n      //Si c'est de colonne vers colonne\n\n      plateau.setCartePiocheEstSelectionne(false); //On déselectionne les autres éléments\n\n      if (plateau.tabColonnes[indexX][indexY] === undefined)\n        //Si clic sur une colonne vide\n        {\n          const carteDep = plateau.getCarteColonneSelectionne();\n          handleDeplacerCarte(carteDep, indexX, \"COLONNES\", plateau, jeuLance);\n          handleRechargerPage(plateau, jeuLance);\n          return;\n        }\n      if (plateau.getCarteColonneSelectionne() === plateau.tabColonnes[indexX][indexY] || !plateau.tabColonnes[indexX][indexY].getEstRetournee())\n        //Si déjà selectionné alors on déselectionne\n        {\n          plateau.setCarteColonneSelectionne(null);\n        } else {\n        if (plateau.getCarteColonneSelectionne() !== null) {\n          const carteDep = plateau.getCarteColonneSelectionne();\n          const carteArr = plateau.tabColonnes[indexX][indexY];\n          if (carteArr === undefined)\n            //Si clic sur colonne vide\n            {\n              handleDeplacerCarte(carteDep, indexX, \"COLONNES\", plateau, jeuLance);\n            } else {\n            handleDeplacerCarte(carteDep, carteArr, \"COLONNES\", plateau, jeuLance);\n          }\n        } else {\n          plateau.setCarteColonneSelectionne(plateau.tabColonnes[indexX][indexY]);\n        }\n      }\n      handleRechargerPage(plateau, jeuLance);\n    };\n    const handlePiocheClick = event => {\n      const rect = piocheCanvas.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      if (x > 130) {\n        if (plateau.getCartePiocheSelectionne() !== null) {\n          plateau.cartes.unshift(plateau.getCartePiocheSelectionne());\n        }\n        plateau.setCartePiocheSelectionne(plateau.cartes.pop());\n        plateau.setCartePiocheEstSelectionne(false);\n      } else if (x < 121) {\n        if (plateau.getCartePiocheEstSelectionne()) {\n          plateau.setCartePiocheEstSelectionne(false);\n        } else {\n          plateau.setCartePiocheEstSelectionne(true);\n        }\n      }\n      plateau.setCarteColonneSelectionne(null);\n      handleRechargerPage(plateau, jeuLance);\n    };\n    pilesCanvas.addEventListener(\"click\", handlePilesClick);\n    colonnesCanvas.addEventListener(\"click\", handleColonnesClick);\n    piocheCanvas.addEventListener(\"click\", handlePiocheClick);\n    return () => {\n      pilesCanvas.removeEventListener(\"click\", handlePilesClick);\n      colonnesCanvas.removeEventListener(\"click\", handleColonnesClick);\n      piocheCanvas.removeEventListener(\"click\", handlePiocheClick);\n    };\n  }, [plateau]);\n  const handleGameStart = () => {\n    if (!jeuLance) {\n      handleMelangerCartes();\n      handleRechargerPage(plateau, jeuLance);\n      setJeuLance(true);\n    }\n  };\n  const handleMelangerCartes = () => {\n    plateau.melangerCartes();\n  };\n  const handleClicDroit = event => {\n    event.preventDefault();\n    if (plateau.getCarteColonneSelectionne() !== null && plateau.getCarteColonneSelectionne() !== undefined) {\n      handleDeplacerCarte(plateau.getCarteColonneSelectionne(), null, \"FIN-COLONNE\", plateau, jeuLance); //Transfert de colonnes vers FIN\n    } else if (plateau.getCartePiocheSelectionne() !== null && plateau.getCartePiocheEstSelectionne() !== undefined && plateau.getCartePiocheEstSelectionne()) {\n      handleDeplacerCarte(plateau.getCartePiocheSelectionne(), null, \"FIN-PIOCHE\", plateau, jeuLance); //Transfert de pioche vers FIN\n    } else {\n      return;\n    }\n  };\n\n  //Le rendu\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BackGround\",\n    children: [/*#__PURE__*/_jsxDEV(PilesVictoire, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Colonnes, {\n      handleClicDroit: handleClicDroit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pioche, {\n      handleClicDroit: handleClicDroit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGameStart,\n      children: \"Lancer le jeu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"A2kVUA58ikXOckbxpK7IcCGmBkk=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PilesVictoire\");\n$RefreshReg$(_c2, \"Colonnes\");\n$RefreshReg$(_c3, \"Pioche\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["Plateau","React","useEffect","useState","handleRechargerPage","handleDeplacerCarte","jsxDEV","_jsxDEV","PilesVictoire","id","children","className","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","Colonnes","handleClicDroit","onContextMenu","_c2","Pioche","_c3","App","_s","plateau","setPlateau","jeuLance","setJeuLance","nouveauPlateau","pilesCanvas","document","getElementById","colonnesCanvas","piocheCanvas","handlePilesClick","event","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","getCarteColonneSelectionne","getCartePiocheEstSelectionne","getCartePiocheSelectionne","getCarteFinSelectionne","tabFin","Math","floor","setCarteFinSelectionne","setCarteColonneSelectionne","setCartePiocheEstSelectionne","setCartePiocheSelectionne","handleColonnesClick","indexX","indexY","tabColonnes","length","carteDep","undefined","carteArr","getEstRetournee","handlePiocheClick","cartes","unshift","pop","addEventListener","removeEventListener","handleGameStart","handleMelangerCartes","melangerCartes","preventDefault","onClick","_c4","$RefreshReg$"],"sources":["C:/Users/sandr/OneDrive/Bureau/Solitaire React/Solitaire/solitaire/src/App.jsx"],"sourcesContent":["import { Plateau } from \"./composants/Plateau\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./styles/style.css\";\r\nimport handleRechargerPage from \"./scripts/rechargerPage\";\r\nimport handleDeplacerCarte from \"./scripts/deplacerCarte\";\r\n\r\n\r\n/*Ce composant contient tous les autre composants dans app et permet de dispatcher correcter les différents éléments*/\r\nfunction PilesVictoire()\r\n{\r\n    return(\r\n        <div id=\"PilesDiv\">\r\n            <canvas id=\"Piles\" className=\"Piles\" width=\"510\" height=\"200\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Colonnes({handleClicDroit})\r\n{\r\n    return (\r\n        <div id =\"ColonnesDiv\" onContextMenu={handleClicDroit}>\r\n            <canvas className=\"Piles\" id=\"Colonnes\" width=\"900\" height=\"600\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Pioche({handleClicDroit})\r\n{\r\n    return (\r\n        <div id=\"PiocheDiv\" onContextMenu={handleClicDroit}>\r\n            <canvas className=\"Piles\" id=\"Pioche\" width=\"250\" height=\"200\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction App()\r\n{\r\n    //Les états\r\n    const [plateau,          setPlateau         ] = useState(null);\r\n    const [jeuLance,         setJeuLance        ] = useState(false);\r\n\r\n\r\n\r\n    //Les comportements\r\n    useEffect(() => {\r\n        const nouveauPlateau = new Plateau();\r\n        setPlateau(nouveauPlateau);\r\n    }, []);\r\n\r\n\r\n\r\n    //Gestion des clics\r\n    useEffect(() => {\r\n\r\n        if (!plateau) return;\r\n\r\n        const pilesCanvas = document.getElementById(\"Piles\");\r\n        const colonnesCanvas = document.getElementById(\"Colonnes\");\r\n        const piocheCanvas = document.getElementById(\"Pioche\");\r\n\r\n\r\n        const handlePilesClick = (event) => {\r\n            const rect = pilesCanvas.getBoundingClientRect();\r\n            const x = event.clientX - rect.left;\r\n            const y = event.clientY - rect.top;\r\n\r\n\r\n            if(plateau.getCarteColonneSelectionne() !== null)\r\n            {\r\n                handleDeplacerCarte(plateau.getCarteColonneSelectionne(), null, \"FIN-COLONNE\", plateau, jeuLance);\r\n                return;\r\n            }\r\n\r\n            if(plateau.getCartePiocheEstSelectionne() && plateau.getCartePiocheSelectionne() !== null)\r\n            {\r\n                handleDeplacerCarte(plateau.getCartePiocheSelectionne(), null, \"FIN-PIOCHE\", plateau, jeuLance);\r\n                return;\r\n            }\r\n\r\n            if(plateau.getCarteFinSelectionne() === plateau.tabFin[Math.floor(x/130)][0])\r\n            {\r\n                plateau.setCarteFinSelectionne(null);\r\n                handleRechargerPage(plateau, jeuLance);\r\n                return;\r\n            }\r\n\r\n            plateau.setCarteFinSelectionne(plateau.tabFin[Math.floor(x/130)][0])\r\n            plateau.setCarteColonneSelectionne(null);\r\n            plateau.setCartePiocheEstSelectionne(false);\r\n            plateau.setCartePiocheSelectionne(null);\r\n\r\n            handleRechargerPage(plateau, jeuLance);\r\n        };\r\n\r\n\r\n\r\n        const handleColonnesClick = (event) => {\r\n            const rect = colonnesCanvas.getBoundingClientRect();\r\n            const x = event.clientX - rect.left;\r\n            const y = event.clientY - rect.top;\r\n\r\n            \r\n            let indexX = Math.floor(x/130);\r\n            let indexY = Math.floor(y/30);\r\n\r\n            //Permet le calcul de la postion du clic selon la carte ( si une carte sous le paquet est cliquée )\r\n            if(plateau.tabColonnes[indexX].length < indexY)\r\n            {\r\n                indexY = 0;\r\n            }else{\r\n                indexY = plateau.tabColonnes[indexX].length-1 - indexY;\r\n\r\n                if(indexY < 0)\r\n                {\r\n                    indexY = 0;\r\n                }\r\n            }\r\n\r\n            //Si c'est  de la pioche vers les colonnes\r\n            if(plateau.getCartePiocheSelectionne() !== null && plateau.getCarteColonneSelectionne() === null && plateau.getCartePiocheEstSelectionne() === true)\r\n            {\r\n                const carteDep = plateau.getCartePiocheSelectionne();\r\n\r\n                if(plateau.tabColonnes[indexX][indexY] === undefined)\r\n                {\r\n                    handleDeplacerCarte(carteDep, indexX, \"PIOCHE\", plateau, jeuLance);\r\n                    return;\r\n                }\r\n\r\n                const carteArr = plateau.tabColonnes[indexX][indexY];\r\n                handleDeplacerCarte(carteDep, carteArr, \"PIOCHE\", plateau, jeuLance);\r\n                return;\r\n            }\r\n\r\n            //Si c'est de la fin vers les colonnes\r\n            if(plateau.getCarteFinSelectionne() !== null && plateau.getCarteColonneSelectionne() === null)\r\n            {\r\n                const carteDep = plateau.getCarteFinSelectionne();\r\n\r\n                if(plateau.tabColonnes[indexX][indexY] === undefined)\r\n                {\r\n                    handleDeplacerCarte(carteDep, indexX, \"FINversCOLONNES\", plateau, jeuLance);\r\n                    return;\r\n                }\r\n\r\n                const carteArr = plateau.tabColonnes[indexX][indexY];\r\n                handleDeplacerCarte(carteDep, carteArr, \"FINversCOLONNES\", plateau, jeuLance);\r\n                return;\r\n            }\r\n\r\n\r\n\r\n            //Si c'est de colonne vers colonne\r\n\r\n            plateau.setCartePiocheEstSelectionne(false); //On déselectionne les autres éléments\r\n\r\n            if(plateau.tabColonnes[indexX][indexY] === undefined) //Si clic sur une colonne vide\r\n            {\r\n                const carteDep = plateau.getCarteColonneSelectionne();\r\n                handleDeplacerCarte(carteDep, indexX, \"COLONNES\", plateau, jeuLance);\r\n                handleRechargerPage(plateau, jeuLance);\r\n                return;\r\n            }\r\n\r\n            if(plateau.getCarteColonneSelectionne() === plateau.tabColonnes[indexX][indexY] || !plateau.tabColonnes[indexX][indexY].getEstRetournee()) //Si déjà selectionné alors on déselectionne\r\n            {\r\n                plateau.setCarteColonneSelectionne(null);\r\n            }else{\r\n                if(plateau.getCarteColonneSelectionne() !== null)\r\n                {\r\n                    const carteDep = plateau.getCarteColonneSelectionne();\r\n                    const carteArr = plateau.tabColonnes[indexX][indexY];\r\n\r\n                    if(carteArr === undefined) //Si clic sur colonne vide\r\n                    {\r\n                        handleDeplacerCarte(carteDep, indexX, \"COLONNES\", plateau, jeuLance);\r\n                    }else{\r\n                        handleDeplacerCarte(carteDep, carteArr, \"COLONNES\", plateau, jeuLance);\r\n                    }\r\n\r\n                }else{\r\n                    plateau.setCarteColonneSelectionne(plateau.tabColonnes[indexX][indexY]);\r\n                }\r\n            }\r\n\r\n            handleRechargerPage(plateau, jeuLance);\r\n        };\r\n\r\n\r\n\r\n        const handlePiocheClick = (event) => {\r\n            const rect = piocheCanvas.getBoundingClientRect();\r\n            const x = event.clientX - rect.left;\r\n\r\n\r\n            if(x > 130)\r\n            {\r\n                if(plateau.getCartePiocheSelectionne() !== null)\r\n                {\r\n                    plateau.cartes.unshift(plateau.getCartePiocheSelectionne());\r\n                }\r\n\r\n                plateau.setCartePiocheSelectionne(plateau.cartes.pop());\r\n\r\n                plateau.setCartePiocheEstSelectionne(false);\r\n\r\n            }else if(x < 121)\r\n            {\r\n                if(plateau.getCartePiocheEstSelectionne())\r\n                {\r\n                    plateau.setCartePiocheEstSelectionne(false);\r\n                }else\r\n                {\r\n                    plateau.setCartePiocheEstSelectionne(true);\r\n                }\r\n            }\r\n\r\n            plateau.setCarteColonneSelectionne(null);\r\n\r\n            handleRechargerPage(plateau, jeuLance);\r\n        };\r\n\r\n\r\n\r\n        pilesCanvas.addEventListener(\"click\", handlePilesClick);\r\n        colonnesCanvas.addEventListener(\"click\", handleColonnesClick);\r\n        piocheCanvas.addEventListener(\"click\", handlePiocheClick);\r\n\r\n        return () => {\r\n            pilesCanvas.removeEventListener(\"click\", handlePilesClick);\r\n            colonnesCanvas.removeEventListener(\"click\", handleColonnesClick);\r\n            piocheCanvas.removeEventListener(\"click\", handlePiocheClick);\r\n        };\r\n    }, [plateau]);\r\n\r\n\r\n    const handleGameStart = () => {\r\n\r\n        if(!jeuLance)\r\n        {\r\n            handleMelangerCartes();\r\n            handleRechargerPage(plateau, jeuLance);\r\n            setJeuLance(true);\r\n        }\r\n    }\r\n\r\n\r\n    const handleMelangerCartes = () => {\r\n        plateau.melangerCartes();\r\n    }\r\n\r\n\r\n\r\n    const handleClicDroit = (event) => {\r\n        event.preventDefault();\r\n    \r\n        if(plateau.getCarteColonneSelectionne() !== null && plateau.getCarteColonneSelectionne() !== undefined)\r\n        {\r\n            handleDeplacerCarte(plateau.getCarteColonneSelectionne(), null, \"FIN-COLONNE\", plateau, jeuLance); //Transfert de colonnes vers FIN\r\n        }else if(plateau.getCartePiocheSelectionne() !== null && plateau.getCartePiocheEstSelectionne() !== undefined && plateau.getCartePiocheEstSelectionne())\r\n        {\r\n            handleDeplacerCarte(plateau.getCartePiocheSelectionne(), null, \"FIN-PIOCHE\", plateau, jeuLance); //Transfert de pioche vers FIN\r\n        }else{\r\n            return;\r\n        }\r\n      };\r\n    \r\n    \r\n    //Le rendu\r\n    return (\r\n        <div className=\"BackGround\">\r\n            <PilesVictoire></PilesVictoire>\r\n            <Colonnes handleClicDroit={handleClicDroit}></Colonnes>\r\n            <Pioche handleClicDroit={handleClicDroit}></Pioche>\r\n            <button onClick={handleGameStart}>Lancer le jeu</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}